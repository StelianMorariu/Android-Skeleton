version: 2
jobs:
  build:
    docker:
      - image: circleci/android:api-29
    environment:
      _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}
            - gradle-
            - android-cache-

      - run:
          name: Start Gradle Daemon
          command: nohup ./gradlew

      - run:
          name: Build Project
          command: bash ./scripts/ci_assemble.sh

      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}

      - save_cache:
          key: android-cache-{{ epoch }}
          paths:
            - ~/.android/build-cache
            - ~/.android/cache
            -

  check:
    docker:
      - image: circleci/android:api-29
    environment:
      _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}
            - gradle-
            - android-cache-

      - run:
          name: Run Quality Checks
          command: bash ./scripts/ci_quality.sh

  test:
    docker:
      - image: circleci/android:api-29
    environment:
      _JAVA_OPTIONS: -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}
            - gradle-
            - android-cache-

      - run:
          name: Run Unit Tests
          command: bash ./scripts/ci_test.sh

      - store_artifacts:
          path: app/build/reports
          destination: Test Reports
      - store_test_results:
          path: build/test-results

workflows:
  version: 2
  build_and_test:
    jobs:
      - check
      - build:
          requires:
            - check
      - test:
          requires:
            - build

notify:
  webhooks:
    - url: https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN
